on:
  push:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

name: CI

jobs:
  check:
    name: cargo check
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-22.04
    container: fedora:37
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo dnf upgrade --refresh -y
          sudo dnf install -y meson gcc gcc-c++ clang make automake cmake kernel-devel gtk4-devel libadwaita-devel poppler-glib-devel poppler-data alsa-lib-devel
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            _mesonbuild/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Build
        run: |
          meson setup --prefix=/usr _mesonbuild |
          meson configure -Dprofile=devel _mesonbuild |
          meson compile -C _mesonbuild
      - name: Install
        run: meson install -C _mesonbuild
      - name: Test
        run: meson test -v -C _mesonbuild

  fmt:
    name: rustfmt
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check